name: ci-push-validation
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  unit-11-2_12_12:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - run: ./mill -i unitTest 2.12.12
  unit-8-2_12_12:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
      - run: ./mill -i unitTest 2.12.12

  unit-8-2_13_4:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
      - run: ./mill -i unitTest 2.13.4

  integration-11-2_12_12:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - run: ./mill -i integrationTest 2.12.12
  integration-8-2_12_12:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
      - run: ./mill -i integrationTest 2.12.12

  integration-8-2_13_4:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
      - run: ./mill -i integrationTest 2.13.4


  release1:
    runs-on: ubuntu-latest
    env:
      SONATYPE_PGP_SECRET: ${{ secrets.SONATYPE_PGP_SECRET }}
      SONATYPE_DEPLOY_USER: ${{ secrets.SONATYPE_DEPLOY_USER }}
      SONATYPE_DEPLOY_PASSWORD: ${{ secrets.SONATYPE_DEPLOY_PASSWORD }}
      SONATYPE_PGP_PASSWORD: ${{ secrets.SONATYPE_PGP_PASSWORD }}
      LANG: "en_US.UTF-8"
      LC_MESSAGES: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
      - run: test -z "$SONATYPE_PGP_SECRET" || echo "$SONATYPE_PGP_SECRET" | base64 --decode | gpg --import --no-tty --batch --yes
      - run: GPG_TTY=$(tty) ./mill -i publishSonatype __.publishArtifacts 1 3
  release2:
    runs-on: ubuntu-latest
    env:
      SONATYPE_PGP_SECRET: ${{ secrets.SONATYPE_PGP_SECRET }}
      SONATYPE_DEPLOY_USER: ${{ secrets.SONATYPE_DEPLOY_USER }}
      SONATYPE_DEPLOY_PASSWORD: ${{ secrets.SONATYPE_DEPLOY_PASSWORD }}
      SONATYPE_PGP_PASSWORD: ${{ secrets.SONATYPE_PGP_PASSWORD }}
      LANG: "en_US.UTF-8"
      LC_MESSAGES: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
      - run: test -z "$SONATYPE_PGP_SECRET" || echo "$SONATYPE_PGP_SECRET" | base64 --decode | gpg --import --no-tty --batch --yes
      - run: GPG_TTY=$(tty) ./mill -i publishSonatype __.publishArtifacts 2 3
  release3:
    runs-on: ubuntu-latest
    env:
      SONATYPE_PGP_SECRET: ${{ secrets.SONATYPE_PGP_SECRET }}
      SONATYPE_DEPLOY_USER: ${{ secrets.SONATYPE_DEPLOY_USER }}
      SONATYPE_DEPLOY_PASSWORD: ${{ secrets.SONATYPE_DEPLOY_PASSWORD }}
      SONATYPE_PGP_PASSWORD: ${{ secrets.SONATYPE_PGP_PASSWORD }}
      LANG: "en_US.UTF-8"
      LC_MESSAGES: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
      - run: test -z "$SONATYPE_PGP_SECRET" || echo "$SONATYPE_PGP_SECRET" | base64 --decode | gpg --import --no-tty --batch --yes
      - run: GPG_TTY=$(tty) ./mill -i publishSonatype __.publishArtifacts 3 3
  publishDocs:
    runs-on: ubuntu-latest
    env:
      DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
      - run: echo "Hello World" && ./mill -i publishDocs
  publishExecutable:
    runs-on: ubuntu-latest
    env:
      AMMONITE_BOT_AUTH_TOKEN: ${{ secrets.AMMONITE_BOT_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
      - run: ./mill -i publishExecutable
